//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfImageServiceClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getImagesList", ReplyAction="http://tempuri.org/IService/getImagesListResponse")]
        string[] getImagesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getImagesList", ReplyAction="http://tempuri.org/IService/getImagesListResponse")]
        System.Threading.Tasks.Task<string[]> getImagesListAsync();
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ nazwa otoki (ImageNameMessage) komunikatu ImageNameMessage nie pasuje do domyślnej wartości (downloadImage).
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/downloadImage", ReplyAction="http://tempuri.org/IService/downloadImageResponse")]
        WcfImageServiceClient.ServiceReference1.ImageMessage downloadImage(WcfImageServiceClient.ServiceReference1.ImageNameMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/downloadImage", ReplyAction="http://tempuri.org/IService/downloadImageResponse")]
        System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.ImageMessage> downloadImageAsync(WcfImageServiceClient.ServiceReference1.ImageNameMessage request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ nazwa otoki (ImageNameMessage) komunikatu ImageNameMessage nie pasuje do domyślnej wartości (downloadDescription).
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/downloadDescription", ReplyAction="http://tempuri.org/IService/downloadDescriptionResponse")]
        WcfImageServiceClient.ServiceReference1.DescriptionMessage downloadDescription(WcfImageServiceClient.ServiceReference1.ImageNameMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/downloadDescription", ReplyAction="http://tempuri.org/IService/downloadDescriptionResponse")]
        System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.DescriptionMessage> downloadDescriptionAsync(WcfImageServiceClient.ServiceReference1.ImageNameMessage request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ operacja „uploadImage” nie jest ani wywołaniem RPC, ani opakowanym dokumentem.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/uploadImage", ReplyAction="http://tempuri.org/IService/uploadImageResponse")]
        WcfImageServiceClient.ServiceReference1.uploadImageResponse uploadImage(WcfImageServiceClient.ServiceReference1.ImageMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/uploadImage", ReplyAction="http://tempuri.org/IService/uploadImageResponse")]
        System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.uploadImageResponse> uploadImageAsync(WcfImageServiceClient.ServiceReference1.ImageMessage request);
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ operacja „uploadDescription” nie jest ani wywołaniem RPC, ani opakowanym dokumentem.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/uploadDescription", ReplyAction="http://tempuri.org/IService/uploadDescriptionResponse")]
        WcfImageServiceClient.ServiceReference1.uploadDescriptionResponse uploadDescription(WcfImageServiceClient.ServiceReference1.DescriptionMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/uploadDescription", ReplyAction="http://tempuri.org/IService/uploadDescriptionResponse")]
        System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.uploadDescriptionResponse> uploadDescriptionAsync(WcfImageServiceClient.ServiceReference1.DescriptionMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageNameMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageNameMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string name;
        
        public ImageNameMessage() {
        }
        
        public ImageNameMessage(string name) {
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string name;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream image;
        
        public ImageMessage() {
        }
        
        public ImageMessage(string name, long size, System.IO.Stream image) {
            this.name = name;
            this.size = size;
            this.image = image;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DescriptionMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DescriptionMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string name;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream description;
        
        public DescriptionMessage() {
        }
        
        public DescriptionMessage(string name, long size, System.IO.Stream description) {
            this.name = name;
            this.size = size;
            this.description = description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class uploadImageResponse {
        
        public uploadImageResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class uploadDescriptionResponse {
        
        public uploadDescriptionResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WcfImageServiceClient.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WcfImageServiceClient.ServiceReference1.IService>, WcfImageServiceClient.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] getImagesList() {
            return base.Channel.getImagesList();
        }
        
        public System.Threading.Tasks.Task<string[]> getImagesListAsync() {
            return base.Channel.getImagesListAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfImageServiceClient.ServiceReference1.ImageMessage WcfImageServiceClient.ServiceReference1.IService.downloadImage(WcfImageServiceClient.ServiceReference1.ImageNameMessage request) {
            return base.Channel.downloadImage(request);
        }
        
        public long downloadImage(ref string name, out System.IO.Stream image) {
            WcfImageServiceClient.ServiceReference1.ImageNameMessage inValue = new WcfImageServiceClient.ServiceReference1.ImageNameMessage();
            inValue.name = name;
            WcfImageServiceClient.ServiceReference1.ImageMessage retVal = ((WcfImageServiceClient.ServiceReference1.IService)(this)).downloadImage(inValue);
            name = retVal.name;
            image = retVal.image;
            return retVal.size;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.ImageMessage> WcfImageServiceClient.ServiceReference1.IService.downloadImageAsync(WcfImageServiceClient.ServiceReference1.ImageNameMessage request) {
            return base.Channel.downloadImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.ImageMessage> downloadImageAsync(string name) {
            WcfImageServiceClient.ServiceReference1.ImageNameMessage inValue = new WcfImageServiceClient.ServiceReference1.ImageNameMessage();
            inValue.name = name;
            return ((WcfImageServiceClient.ServiceReference1.IService)(this)).downloadImageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfImageServiceClient.ServiceReference1.DescriptionMessage WcfImageServiceClient.ServiceReference1.IService.downloadDescription(WcfImageServiceClient.ServiceReference1.ImageNameMessage request) {
            return base.Channel.downloadDescription(request);
        }
        
        public long downloadDescription(ref string name, out System.IO.Stream description) {
            WcfImageServiceClient.ServiceReference1.ImageNameMessage inValue = new WcfImageServiceClient.ServiceReference1.ImageNameMessage();
            inValue.name = name;
            WcfImageServiceClient.ServiceReference1.DescriptionMessage retVal = ((WcfImageServiceClient.ServiceReference1.IService)(this)).downloadDescription(inValue);
            name = retVal.name;
            description = retVal.description;
            return retVal.size;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.DescriptionMessage> WcfImageServiceClient.ServiceReference1.IService.downloadDescriptionAsync(WcfImageServiceClient.ServiceReference1.ImageNameMessage request) {
            return base.Channel.downloadDescriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.DescriptionMessage> downloadDescriptionAsync(string name) {
            WcfImageServiceClient.ServiceReference1.ImageNameMessage inValue = new WcfImageServiceClient.ServiceReference1.ImageNameMessage();
            inValue.name = name;
            return ((WcfImageServiceClient.ServiceReference1.IService)(this)).downloadDescriptionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfImageServiceClient.ServiceReference1.uploadImageResponse WcfImageServiceClient.ServiceReference1.IService.uploadImage(WcfImageServiceClient.ServiceReference1.ImageMessage request) {
            return base.Channel.uploadImage(request);
        }
        
        public void uploadImage(string name, long size, System.IO.Stream image) {
            WcfImageServiceClient.ServiceReference1.ImageMessage inValue = new WcfImageServiceClient.ServiceReference1.ImageMessage();
            inValue.name = name;
            inValue.size = size;
            inValue.image = image;
            WcfImageServiceClient.ServiceReference1.uploadImageResponse retVal = ((WcfImageServiceClient.ServiceReference1.IService)(this)).uploadImage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.uploadImageResponse> WcfImageServiceClient.ServiceReference1.IService.uploadImageAsync(WcfImageServiceClient.ServiceReference1.ImageMessage request) {
            return base.Channel.uploadImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.uploadImageResponse> uploadImageAsync(string name, long size, System.IO.Stream image) {
            WcfImageServiceClient.ServiceReference1.ImageMessage inValue = new WcfImageServiceClient.ServiceReference1.ImageMessage();
            inValue.name = name;
            inValue.size = size;
            inValue.image = image;
            return ((WcfImageServiceClient.ServiceReference1.IService)(this)).uploadImageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfImageServiceClient.ServiceReference1.uploadDescriptionResponse WcfImageServiceClient.ServiceReference1.IService.uploadDescription(WcfImageServiceClient.ServiceReference1.DescriptionMessage request) {
            return base.Channel.uploadDescription(request);
        }
        
        public void uploadDescription(string name, long size, System.IO.Stream description) {
            WcfImageServiceClient.ServiceReference1.DescriptionMessage inValue = new WcfImageServiceClient.ServiceReference1.DescriptionMessage();
            inValue.name = name;
            inValue.size = size;
            inValue.description = description;
            WcfImageServiceClient.ServiceReference1.uploadDescriptionResponse retVal = ((WcfImageServiceClient.ServiceReference1.IService)(this)).uploadDescription(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.uploadDescriptionResponse> WcfImageServiceClient.ServiceReference1.IService.uploadDescriptionAsync(WcfImageServiceClient.ServiceReference1.DescriptionMessage request) {
            return base.Channel.uploadDescriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<WcfImageServiceClient.ServiceReference1.uploadDescriptionResponse> uploadDescriptionAsync(string name, long size, System.IO.Stream description) {
            WcfImageServiceClient.ServiceReference1.DescriptionMessage inValue = new WcfImageServiceClient.ServiceReference1.DescriptionMessage();
            inValue.name = name;
            inValue.size = size;
            inValue.description = description;
            return ((WcfImageServiceClient.ServiceReference1.IService)(this)).uploadDescriptionAsync(inValue);
        }
    }
}
